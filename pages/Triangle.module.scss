$piece-side-length: 75px;
$corner-side-length: calc($piece-side-length / 2);
$grab-handle-diameter: 85px;

.grab-handle {
    width: $grab-handle-diameter;
    height: $grab-handle-diameter;
    background-color:  transparent; // aqua = rgba(0, 255, 255, 0.5);
    cursor: pointer; // grab
    border: 1px dotted cadetblue;
    border-radius: 100%;

    position: relative;
    top: 42px; // replace with var
    margin: 0 -4px;

    &.odd {
        top: 0px;
    }
}

.triangle {
    width: 0;
    height: 0;
    border-left: 75px solid transparent;
    border-right: 75px solid transparent;
    border-bottom: calc(150px * .866) solid white;
    transform-origin: 50% 67%;  // x y offset

    z-index: -1;
    position: absolute;
    bottom: -2px;
    right: -34px;

    // layer to add images & puzzle design
    .overlay {
        color: white;
        width: 150px;
        height: calc(150px * .866);


        position: relative;
        left: -75px;
        // top: -10px;

        > div {
            text-align: center;
            width: 20px;
            height: 20px;
            position: absolute;
        }
        div:nth-child(1) {
            left: calc(50% - 10px); // 1/2 of width var
            top: 18px;
        }
        div:nth-child(2) {
            transform: rotate(120deg);
            right: 15px;
            bottom: 3px;
        }
        div:nth-child(3) {
            transform: rotate(-120deg);
            left: 15px;
            bottom: 3px;
        }

        .overlay-corner {
            position: absolute;
            width: 0;
            height: 0;
            border-left: $corner-side-length solid transparent;
            border-right: $corner-side-length solid transparent;
            border-bottom: calc($corner-side-length * 2 * .866) solid teal;  // create 2 vars for this ... 
            // how to have triangle side length be dynamic for future screen size calcs ...

            // use classnames here instead - more robust & clear
            > div {
                width: 20px;
                height: 20px;
            }
        }
        .overlay-corner:nth-child(1) {
            left: calc(50% - $corner-side-length); // 1/2 of width var
            top: -1px;
        }
        .overlay-corner:nth-child(2) {
            border-bottom: calc($corner-side-length * 2 * .866) solid plum;  // create 2 vars for this ... 
            right: calc($corner-side-length * -0.28); // -10.5px;
            bottom: calc($corner-side-length * -0.44); // -16.5px;
        }
        .overlay-corner:nth-child(3) {
            border-bottom: calc($corner-side-length * 2 * .866) solid orange;  // create 2 vars for this ... 
            left: calc($corner-side-length * -0.28);
            bottom: calc($corner-side-length * -0.44);
        }
    }

    .orange {
        background-color: orange;
    }
    .purple {
        background-color: lavender;
    }
    .green {
        background-color: forestgreen;
    }
}
